{"ast":null,"code":"var _jsxFileName = \"/Users/gujunhwi/Desktop/3\\u1112\\u1161\\u11A8\\u1102\\u1167\\u11AB/1\\u1112\\u1161\\u11A8\\u1100\\u1175/\\u110C\\u116E\\u11BC\\u1100\\u1161\\u11AB/\\u110B\\u1170\\u11B8\\u1111\\u1173\\u1105\\u1169\\u1100\\u1173\\u1105\\u1162\\u1106\\u1175\\u11BC/\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/chatapp/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000', {\n  transports: ['websocket'],\n  // 웹소켓 사용\n  withCredentials: true // CORS 허용\n});\nfunction Chat() {\n  _s();\n  const [rooms, setRooms] = useState(['Room1', 'Room2', 'Room3']);\n  const [currentRoom, setCurrentRoom] = useState('Room1');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [newMessages, setNewMessages] = useState([]); // newMessages를 빈 배열로 초기화합니다.\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userName, setUserName] = useState(localStorage.getItem('username')); // Retrieve username from local storage\n\n  useEffect(() => {\n    socket.emit('joinRoom', currentRoom);\n    socket.on('receiveMessage', data => {\n      setMessages(prevMessages => {\n        const updatedMessages = {\n          ...prevMessages\n        };\n        if (!updatedMessages[data.room]) {\n          updatedMessages[data.room] = []; // Initialize messages for the room if not present\n        }\n        updatedMessages[data.room].push(data); // Add message to the corresponding room\n        return updatedMessages;\n      });\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [currentRoom, messages]);\n  const sendMessage = () => {\n    socket.emit('sendMessage', {\n      room: currentRoom,\n      message,\n      userName\n    }); // userName 추가\n    setMessage('');\n    // newMessages가 null 또는 undefined인 경우를 처리하여 안전하게 동작하도록 합니다.\n    setNewMessages(prevMessages => {\n      // const updatedMessages = prevMessages || []; // null 또는 undefined인 경우 빈 배열로 초기화합니다.\n      return [...updatedMessages, {\n        message,\n        userName\n      }]; // 새로운 메시지를 추가합니다.\n    });\n  };\n  const filteredRooms = rooms.filter(room => room.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search rooms...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-list\",\n        children: filteredRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `room ${room === currentRoom ? 'active' : ''}`,\n          onClick: () => setCurrentRoom(room),\n          children: room\n        }, room, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"room-name\",\n          children: currentRoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"user-button\",\n            children: [userName, \"\\uB2D8\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout-button\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              style: {\n                textDecoration: 'none',\n                color: '#fff'\n              },\n              children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: (messages[currentRoom] || []).map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.userName, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), msg.message, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"\\uC804\\uC1A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"rBtXGAN4IMgStGgH+ffULCgjqz4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","Link","jsxDEV","_jsxDEV","socket","transports","withCredentials","Chat","_s","rooms","setRooms","currentRoom","setCurrentRoom","messages","setMessages","message","setMessage","newMessages","setNewMessages","searchTerm","setSearchTerm","userName","setUserName","localStorage","getItem","emit","on","data","prevMessages","updatedMessages","room","push","off","sendMessage","filteredRooms","filter","toLowerCase","includes","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","to","style","textDecoration","color","msg","index","_c","$RefreshReg$"],"sources":["/Users/gujunhwi/Desktop/3학년/1학기/중간/웹프로그래밍/프로젝트/chatapp/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport {Link} from \"react-router-dom\";\n\nconst socket = io('http://localhost:3000', {\n    transports: ['websocket'], // 웹소켓 사용\n    withCredentials: true, // CORS 허용\n});\n\nfunction Chat() {\n    const [rooms, setRooms] = useState(['Room1', 'Room2', 'Room3']);\n    const [currentRoom, setCurrentRoom] = useState('Room1');\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [newMessages, setNewMessages] = useState([]); // newMessages를 빈 배열로 초기화합니다.\n    const [searchTerm, setSearchTerm] = useState('');\n    const [userName, setUserName] = useState(localStorage.getItem('username')); // Retrieve username from local storage\n\n    useEffect(() => {\n        socket.emit('joinRoom', currentRoom);\n        socket.on('receiveMessage', (data) => {\n            setMessages(prevMessages => {\n                const updatedMessages = { ...prevMessages };\n                if (!updatedMessages[data.room]) {\n                    updatedMessages[data.room] = []; // Initialize messages for the room if not present\n                }\n                updatedMessages[data.room].push(data); // Add message to the corresponding room\n                return updatedMessages;\n            });\n        });\n\n        return () => {\n            socket.off('receiveMessage');\n        };\n    }, [currentRoom, messages]);\n\n    const sendMessage = () => {\n        socket.emit('sendMessage', { room: currentRoom, message, userName }); // userName 추가\n        setMessage('');\n        // newMessages가 null 또는 undefined인 경우를 처리하여 안전하게 동작하도록 합니다.\n        setNewMessages((prevMessages) => {\n            // const updatedMessages = prevMessages || []; // null 또는 undefined인 경우 빈 배열로 초기화합니다.\n            return [...updatedMessages, { message, userName }]; // 새로운 메시지를 추가합니다.\n        });\n    };\n\n    const filteredRooms = rooms.filter(room => room.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"sidebar\">\n                <div className=\"top-bar\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search rooms...\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                        className=\"search-input\"\n                    />\n                </div>\n                <div className=\"room-list\">\n                    {filteredRooms.map((room) => (\n                        <div\n                            key={room}\n                            className={`room ${room === currentRoom ? 'active' : ''}`}\n                            onClick={() => setCurrentRoom(room)}\n                        >\n                            {room}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"main-chat\">\n                <div className=\"top-bar\">\n                    <h2 className=\"room-name\">{currentRoom}</h2>\n                    <div className=\"user-controls\">\n                        <button className=\"user-button\">{userName}님</button>\n                        <button className=\"logout-button\"><Link to=\"/\" style={{ textDecoration: 'none', color: '#fff' }}>로그아웃</Link></button>\n                    </div>\n                </div>\n                <div className=\"chat-window\">\n                    <div className=\"messages\">\n                        {(messages[currentRoom] || []).map((msg, index) => (\n                            <div key={index} className=\"message\">\n                                <strong>{msg.userName}: </strong>{msg.message} {/* 사용자 이름 추가 */}\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"input-box\">\n                        <input\n                            type=\"text\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                            placeholder=\"Type a message...\"\n                        />\n                        <button onClick={sendMessage}>전송</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}